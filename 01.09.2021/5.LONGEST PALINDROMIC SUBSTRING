class Solution {
public:
    string longestPalindrome(string s) {
        int k=s.length(),maxi=1,m=0,n=0;
        int dp[k][k];
        for(int i=0;i<k;i++)
        {
            for(int j=0;j<k;j++)
            {
                if(i==j)dp[i][j]=1;
                else if((j-i)==1)
                {
                    if(s[i]==s[j]){
                        dp[i][j]=1;
                        maxi=2;
                        m=i;
                        n=2;
                                }   
                 
                    else dp[i][j]=0;
                }
                else
                {
                    dp[i][j]=0;
                }
            }
        }
        for(int z=3;z<=k;z++)
        {
            for(int i=0;i<k-z+1;i++)
            {
                int j=i+z-1;
                if(s[i]==s[j]&& dp[i+1][j-1]==1)
                {
                    dp[i][j]=1;
                    if(z>maxi)
                    {
                        m=i;
                        maxi=z;
                        n=j-i+1;
                    }
                }
            }
        }
        if(maxi==1)
        {
            return s.substr(0,1);
        }
        else
            return s.substr(m,n);
    }
};
