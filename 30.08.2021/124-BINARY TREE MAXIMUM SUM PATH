/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxPathSum(TreeNode* root) {
        if(!root)return 0;
        int result=INT_MIN;
        int res=findmax(root,result);
        return result;
    }
   
    int findmax(TreeNode* root,int& result)
    {
        if(!root)return 0;
        int left=findmax(root->left,result);
        int right=findmax(root->right,result);
        int maxstraight = max(max(left,right)+root->val,root->val);//maximum path in straight line
        int maxincludingroot=max(maxstraight,left+right+root->val);//maximum path involving that current node as root breakpoint
        result=max(result,maxincludingroot);
        return maxstraight;
    }
};
